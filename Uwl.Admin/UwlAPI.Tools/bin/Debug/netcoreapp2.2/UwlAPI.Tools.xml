<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UwlAPI.Tools</name>
    </assembly>
    <members>
        <member name="P:UwlAPI.Tools.AuthHelper.JWT.JwtSettings.Issuer">
            <summary>
            token是谁颁发的
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.JWT.JwtSettings.Audience">
            <summary>
            token可以给哪些客户端使用
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.JWT.JwtSettings.SecretKey">
            <summary>
            需要加密的key
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Policys.JwtToken">
            <summary>
            
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Policys.JwtToken.BuildJwtToken(System.Security.Claims.Claim[],UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement)">
            <summary>
            获取基于JWT的Token
            </summary>
            <param name="claims">需要在登录的时候配置</param>
            <param name="permissionRequirement">在startup中定义的参数</param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Policys.PermissionHandler">
            <summary>
            PermissionHandler 自定义授权处理器，核心！
            权限授权处理器 继承AuthorizationHandler ，并且需要一个权限必要参数
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionHandler._Schemes">
            <summary>
            验证方案提供对象
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionHandler._roleAssigServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Policys.PermissionHandler.#ctor(Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider,Uwl.Data.Server.RoleAssigServices.IRoleAssigServer)">
            <summary>
            
            </summary>
            <param name="authenticationScheme"></param>
            <param name="roleAssigServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Policys.PermissionHandler.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement)">
            <summary>
            重写异步处理程序
            </summary>
            <param name="context"></param>
            <param name="requirement"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Policys.PermissionItem">
            <summary>
            用户或角色或其他凭据实体
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionItem.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionItem.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement">
            <summary>
            必要参数类，
            继承 IAuthorizationRequirement，用于设计自定义权限处理器PermissionHandler
            因为AuthorizationHandler 中的泛型参数 TRequirement 必须继承 IAuthorizationRequirement
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.Permissions">
            <summary>
            用户权限集合
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{UwlAPI.Tools.AuthHelper.Policys.PermissionItem},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Token.JwtHelper">
            <summary>
            自定义中间件生成Token
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Token.JwtHelper.IssueJWT(UwlAPI.Tools.AuthHelper.Token.TokenModelJWT)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Token.JwtHelper.SerializeJwt(System.String)">
            <summary>
            反序列化jwt
            </summary>
            <param name="jwtstr"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Token.TokenModelJWT">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Token.TokenModelJWT.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Token.TokenModelJWT.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.AuthHelper.Token.TokenModelJWT.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.AuthHelper.Token.JwtTokenAuth">
            <summary>
            定义执行执行中间件类
            </summary>
        </member>
        <member name="F:UwlAPI.Tools.AuthHelper.Token.JwtTokenAuth._next">
            <summary>
            定义委托
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Token.JwtTokenAuth.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            注入一个委托
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:UwlAPI.Tools.AuthHelper.Token.JwtTokenAuth.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            中间件执行方法判断是否存在
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.AuthorizeController">
            <summary>
            登录或者获取Token接口不加//[Authorize(Policy = "Admin")]权限，加了类似，你把钥匙上了锁
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.AuthorizeController.#ctor(Microsoft.Extensions.Options.IOptions{UwlAPI.Tools.AuthHelper.JWT.JwtSettings},Uwl.Data.Server.UserServices.IUserServer,Uwl.Common.Cache.RedisCache.IRedisCacheManager,Uwl.Common.RabbitMQ.IRabbitMQ,UwlAPI.Tools.AuthHelper.Policys.PermissionRequirement,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Uwl.QuartzNet.JobCenter.Center.ISchedulerCenter)">
            <summary>
            构造函数
            </summary>
            <param name="_jwtSettingsAccesser"></param>
            <param name="userServer"></param>
            <param name="redisCacheManager"></param>
            <param name="rabbitMQ">消息队列</param>
            <param name="permissionRequirement"></param>
            <param name="hostingEnvironment"></param>
            <param name="schedulerCenter"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.AuthorizeController.Token(UwlAPI.Tools.Models.LoginViewModel.LoginViewModel)">
            <summary>
            官方的方式获取Token
            </summary>
            <param name="loginViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.AuthorizeController.GetJWTStr(UwlAPI.Tools.Models.LoginViewModel.LoginViewModel)">
            <summary>
            第二种方式获取Token
            </summary>
            <param name="loginViewModel"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.AuthorizeController.TokenAssig(UwlAPI.Tools.Models.LoginViewModel.LoginViewModel)">
            <summary>
            自定义策略授权JWT，控制到Action级别权限
            </summary>
            <param name="loginViewModel"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.BaseController">
            <summary>
            基类控制器
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Controllers.BaseController.RoleIds">
            <summary>
            角色Id
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            action执行前事件
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.ButtonsController">
            <summary>
            按钮API接口
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ButtonsController.#ctor(Uwl.Data.Server.ButtonServices.IButtonServer)">
            <summary>
            注入服务层
            </summary>
            <param name="buttonServer">按钮服务层</param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ButtonsController.GetButtonByPage(Uwl.Data.Model.Assist.ButtonQuery)">
            <summary>
            分页获取按钮
            </summary>
            <param name="buttonQuery"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ButtonsController.AddButton(Uwl.Data.Model.BaseModel.SysButton)">
            <summary>
            添加按钮
            </summary>
            <param name="sysButton"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ButtonsController.UpdateButton(Uwl.Data.Model.BaseModel.SysButton)">
            <summary>
            修改按钮信息
            </summary>
            <param name="sysButton"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ButtonsController.Delete(System.String)">
            <summary>
            删除按钮
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.HomeController">
            <summary>
            
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.HomeController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.LogsController">
            <summary>
            日志管理
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.LogsController.#ctor(Uwl.Data.Server.LogsServices.ILogsServer)">
            <summary>
            注入
            </summary>
            <param name="logsServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.LogsController.GetLogsListByPage(Uwl.Data.Server.LogsServices.LogsQueryModel)">
            <summary>
            获取操作日志列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.MenuController">
            <summary>
            菜单管理API接口
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.#ctor(Uwl.Data.Server.MenuServices.IMenuServer)">
            <summary>
            注入服务层
            </summary>
            <param name="menuServer">菜单管理服务层</param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.GetMenuByPage(Uwl.Data.Model.Assist.MenuQuery)">
            <summary>
            分页获取菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.Get(System.Guid)">
            <summary>
            根据ID获取一个菜单的视图对象
            </summary>
            <param name="Id">传入的菜单ID</param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.AddMenuPost(Uwl.Data.Model.BaseModel.SysMenu)">
            <summary>
            添加菜单
            </summary>
            <param name="sysMenu"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.Put(Uwl.Data.Model.BaseModel.SysMenu)">
            <summary>
            修改菜单
            </summary>
            <param name="sysMenu"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.DeleteMenu(System.String)">
            <summary>
            批量删除菜单
            </summary>
            <param name="Ids"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuController.GetAllMenuList">
            <summary>
            获取所有的菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.MenuTreeController">
            <summary>
            获取树形菜单
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuTreeController.#ctor(Uwl.Data.Server.MenuServices.IMenuServer)">
            <summary>
            构造函数注入
            </summary>
            <param name="menuServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.MenuTreeController.GetMenusTreeList(System.Guid)">
            <summary>
            获取菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.OrganizeController">
            <summary>
            组织机构API接口
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.OrganizeController.#ctor(Uwl.Data.Server.OrganizeServices.IOrganizeServer)">
            <summary>
            构造函数注入
            </summary>
            <param name="organizeServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.OrganizeController.GetOrganizePage(Uwl.Data.Model.Assist.BaseQuery)">
            <summary>
            分页获取组织机构列表
            </summary>
            <param name="baseQuery"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.OrganizeController.GetMenusTreeList">
            <summary>
            获取菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.OrganizeController.AddOrganize(Uwl.Data.Model.BaseModel.SysOrganize)">
            <summary>
            添加组织机构
            </summary>
            <param name="sysOrganize"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.OrganizeController.UpdateOrganize(Uwl.Data.Model.BaseModel.SysOrganize)">
            <summary>
            修改组织机构
            </summary>
            <param name="sysOrganize"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.RoleAssigController">
            <summary>
            角色分配权限控制器
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleAssigController.#ctor(Uwl.Data.Server.RoleAssigServices.IRoleAssigServer)">
            <summary>
            角色权限接口
            </summary>
            <param name="roleAssigServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleAssigController.GetRoleAssig(System.Guid)">
            <summary>
            根据角色ID获取所有的菜单和按钮（包含已分配或者未分配的）
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleAssigController.Save(Uwl.Data.Model.RoleAssigVO.SaveRoleAssigViewModel)">
            <summary>
            保存角色权限
            </summary>
            <param name="saveRoleAssigView">数据保存对象</param>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.RoleController">
            <summary>
            角色管理API接口
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleController.#ctor(Uwl.Data.Server.RoleServices.IRoleServer)">
            <summary>
            角色管理接口
            </summary>
            <param name="roleServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleController.GetUserByPage(Uwl.Data.Model.Assist.RoleQuery)">
            <summary>
            分页获取角色
            </summary>
            <param name="roleQuery">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleController.AddRole(Uwl.Data.Model.BaseModel.SysRole)">
            <summary>
            添加角色
            </summary>
            <param name="sysRole"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleController.UpdateRole(Uwl.Data.Model.BaseModel.SysRole)">
            <summary>
            角色信息修改
            </summary>
            <param name="sysRole"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleController.DeleteUser(System.String)">
            <summary>
            删除角色
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.RoleController.GetAllRole">
            <summary>
            获取所有的角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.ScheduleController">
            <summary>
            任务计划管理API接口
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ScheduleController.#ctor(Uwl.Data.Server.ScheduleServices.IScheduleServer)">
            <summary>
            注入构造函数
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ScheduleController.AddSchedule(Uwl.Data.Model.BaseModel.SysSchedule)">
            <summary>
            添加计划任务
            </summary>
            <param name="sysRole"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.ScheduleController.UpdateSchedule(Uwl.Data.Model.BaseModel.SysSchedule)">
            <summary>
            修改计划任务
            </summary>
            <param name="sysRole"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.UserController">
            <summary>
            用户管理API接口
            </summary>
        </member>
        <member name="F:UwlAPI.Tools.Controllers.UserController._userserver">
            <summary>
            创建一个服务层的对象来进行服务层的方法调用
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.#ctor(Uwl.Data.Server.UserServices.IUserServer)">
            <summary>
            注入服务层
            </summary>
            <param name="userServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.GetUser(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.GetUserByPage(Uwl.Data.Model.Assist.UserQuery)">
            <summary>
            分页获取用户信息
            </summary>
            <param name="userQuery"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.AddUsers(Uwl.Data.Model.BaseModel.SysUser)">
            <summary>
            添加用户
            </summary>
            <param name="sysUser"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.UpdateUser(Uwl.Data.Model.BaseModel.SysUser)">
            <summary>
            用户信息修改
            </summary>
            <param name="sysUser"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.DeleteUser(System.String)">
            <summary>
            删除用户
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.UploadUser">
            <summary>
            上传Excel文件
            </summary>
            <param></param>
            <returns></returns>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserController.ExcelDown(Uwl.Data.Model.Assist.UserQuery)">
            <summary>
            员工信息导出Excel
            </summary>
            <param name="userQuery">根据条件导出</param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Controllers.UserRoleController">
            <summary>
            用户角色控制器
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserRoleController.#ctor(Uwl.Data.Server.UserServices.IUserRoleServer)">
            <summary>
            注入用户角色服务层
            </summary>
            <param name="userRoleServer"></param>
        </member>
        <member name="M:UwlAPI.Tools.Controllers.UserRoleController.GetRoleIdListByUserId(System.Guid)">
            <summary>
            根据用户Id获取已分配的角色
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.CustomApiVersion">
            <summary>
            自定义版本
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.CustomApiVersion.ApiVersions">
            <summary>
            Api接口版本 自定义
            </summary>
        </member>
        <member name="F:UwlAPI.Tools.CustomApiVersion.ApiVersions.v1">
            <summary>
            v1 版本
            </summary>
        </member>
        <member name="F:UwlAPI.Tools.CustomApiVersion.ApiVersions.v2">
            <summary>
            v2 版本
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.Filter.AddRoutePrefixFilter">
            <summary>
            全局路由公约前缀设置
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Filter.AddRoutePrefixFilter.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)">
            <summary>
            构造函数注入
            </summary>
            <param name="routeTemplateProvider"></param>
        </member>
        <member name="M:UwlAPI.Tools.Filter.AddRoutePrefixFilter.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            路由前缀实现方法
            </summary>
            <param name="application"></param>
        </member>
        <member name="T:UwlAPI.Tools.Filter.GlobalRouteAuthorizeConvention">
            <summary>
            Summary:全局路由权限公约
            Remarks:目的是针对不同的路由，采用不同的授权过滤器
            如果 controller 上不加 [Authorize] 特性，默认都是 Permission 策略
            否则，如果想特例其他授权机制的话，需要在 controller 上带上  [Authorize]，然后再action上自定义授权即可，比如 [Authorize(Roles = "Admin")]
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.Models.LoginViewModel.LoginViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Models.LoginViewModel.LoginViewModel.User">
            <summary>
            
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Models.LoginViewModel.LoginViewModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Models.RoleAssigModel.RoleAssigPermission.RoleId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Models.RoleAssigModel.RoleAssigPermission.MenuId">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Models.RoleAssigModel.RoleAssigPermission.ButtonId">
            <summary>
            按钮ID
            </summary>
        </member>
        <member name="T:UwlAPI.Tools.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:UwlAPI.Tools.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:UwlAPI.Tools.Startup">
            <summary>
            启动程序
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Startup.Configuration">
            <summary>
            定义一个启用数据库连接IConfiguration的属性
            </summary>
        </member>
        <member name="P:UwlAPI.Tools.Startup._mapperConfiguration">
            <summary>
            autoMapper接口
            </summary>
        </member>
        <member name="M:UwlAPI.Tools.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            在构造函数中操作appsettings文件获取数据库连接字符串
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:UwlAPI.Tools.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            启动程序
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:UwlAPI.Tools.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            应用程序管道
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
    </members>
</doc>
